{
  // The AllowedHosts setting is used by the ASP.NET Core middleware to control which hosts are allowed to access the application.
  // The wildcard * allows all hosts. If we're deploying to production, we might want to restrict this to specific hostnames for security reasons.
  "AllowedHosts": "*",
  // This is just for initial seeding, and while testing the application.
  // This config and relevant data can be removed before going to production or immediately after configuration the application.
  "AdminUser": {
    "Id": "1f221104-a253-4e92-90be-954cfee5c2a6",
    "Email": "kyle.sexton@melodicsoftware.com",
    "FirstName": "Kyle",
    "LastName": "Sexton"
  },
  "AntiForgery": {
    "DisableAntiForgery": true
  },
  "Argon2PasswordHasher": {
    "TimeCost": 2, // iteration count
    "MemoryCost": 19456, // 19 MB
    "Lanes": 1, // degree of parallelism
    "Threads": 1, // degree of parallelism
    "HashLength": 32,
    "Type": "HybridAddressing",
    "Version": "Nineteen"
  },
  "Authentication:Google:ClientId": "1067371637968-8rvfbund5qhmbeti6ost2tkqsld5appg.apps.googleusercontent.com",
  "Authentication:Microsoft:ClientId": "1591fe98-67a1-4588-bb69-13aa04defb61",
  "Authentication:Spotify:ClientId": "43ee04a48efa4baaa03328611a65b537",
  "Authsignal": {
    "EnableAuthsignal": true,
    "BaseUrl": "https://api.authsignal.com/v1/",
    "TenantId": "8f49101c-6722-45c3-ad43-b43d798c4924"
  },
  "AutoMapper": {
    "EnableAutoMapper": true
  },
  "Azure:KeyVault:SharedVaultRootUri": "https://kv-idsrv-shared-use-001.vault.azure.net/",
  "BCryptPasswordHasher": {
    "WorkFactor": 13,
    "EnhancedEntropy": true,
    "HashType": "SHA512"
  },
  "Bff": {
    "EnableBff": false
  },
  "Blazor": {
    "EnableBlazor": false
  },
  "Caching": {
    "EnableCaching": true,
    "EnableDistributedCaching": true,
    "EnableResponseCaching": false,
    "EnableHttpCacheHeaders": false,
    "EnableOutputCaching": false
  },
  "CompanyDisplayName": "Melodic Software",
  "ConnectionStrings": {
    "SQLConnection": ""
  },
  "Controllers": {
    "EnableControllers": true,
    "EnableViews": false,
    "EnableGlobalAuthorizeFilter": true
  },
  "CORS": {
    "EnableCors": true,
    "AllowCredentials": false,
    "AllowedOrigins": [
      "*"
    ],
    "AllowedMethods": [],
    "AllowedHeaders": [],
    "ExposedHeaders": []
  },
  "Domain": {
    "Events": {
      "EnableQueuing": false,
      "ClearDomainEventsAfterRaising": false
    }
  },
  "EntityFramework": {
    "EnableEntityFramework": true,
    "ResetDatabase": false,
    "ProviderName": "SQLServer"
  },
  "ErrorHandling": {
    "UseProblemDetails": true,
    "UseHellangMiddleware": true,
    "UseExceptionHandler": true,
    "UseStatusCodePages": false,
    "InternalServerErrorResponseDetailMessage": "An unexpected error has occurred. Please try again later.",
    "UseDevelopmentMiddleware": false,
    "UseSimpleStatusCodePages": false,
    "UseStatusCodePagesWithRedirects": false,
    "StatusCodePageRedirectPath": "/Error/{0}",
    "UseStatusCodePagesWithReExecute": false,
    "StatusCodePageReExecutePath": "/Error",
    "StatusCodePagesQueryFormat": "?statusCode={0}",
    "UseConditionalMiddleware": true
  },
  "FIPSComplianceRequired": false,
  "FromEmailAddress": "noreply@melodicsoftware.com",
  "HeaderForwarding": {
    "EnableHeaderForwarding": true
  },
  "HealthChecks": {
    "EnableHealthChecks": true,
    "UrlPattern": "/health",
    "AllowAnonymous": true,
    "SqlConnectionStringNames": [
      "AspNetIdentity",
      "IdentityServer"
    ],
    "RedisConnectionStringName": "Redis",
    "OpenIdConnectAuthorityName": "identity-server"
  },
  "IISIntegration": {
    "EnableIISIntegration": true,
    "AutomaticAuthentication": false,
    "AuthenticationDisplayName": "Windows",
    "ForwardClientCertificate": true
  },
  "Logging": {
    // These are the Microsoft defaults.
    // We're using Serilog, so these are ignored.
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    },
    "Middleware": {
      "HttpLogging": {
        "EnableHttpLogging": false,
        "RequestBodyLogLimit": 32768,
        "ResponseBodyLogLimit": 32768
      },
      "W3C": {
        "EnableW3CLogging": false,
        "LogDirectoryName": "logs",
        "W3CLogFileApplicationName": "IdentityServer",
        "FileSizeLimitInBytes": 5242880,
        "FlushIntervalInSeconds": 2,
        "RetainedFileCountLimit": 2
      }
    },
    "Providers": {
      "EnableConsole": true,
      "EnableJsonConsole": true,
      "EnableAddSystemdConsole": false,
      "EnableDebug": true,
      "EnableEventSource": true,
      "EnableEventLog": true,
      "EnableApplicationInsights": false
    },
    "Telemetry": {
      "EnableApplicationInsightsTelemetry": false
    },
    "TraceListeners": {
      "EnableTextFileTraceListener": false,
      "LogFileApplicationName": "IdentityServer",
      "AutoFlush": true
    }
  },
  "MassTransit": {
    "EnableMassTransit": true,
    "EndpointNamePrefix": null,
    "InMemory": {
      "EnableInMemory": false
    },
    "RabbitMQ": {
      "EnableRabbitMq": false,
      "Host": "localhost",
      "VirtualHost": "/",
      "Username": "guest",
      "Password": "guest"
    }
  },
  "MediatR": {
    "EnableMediatR": true
  },
  "Metrics": {
    "EnableMetrics": false,
    "AppMetricsMeterName": "IdentityServer"
  },
  "Microsoft365Settings": {
    "ClientId": "66a6f125-1df7-42f9-9778-5c3d3eb616df",
    "TenantId": "059beae9-ab81-4b5d-aae1-225588a3e3bb",
    "GraphUserEmailAddress": "noreply@melodicsoftware.com"
  },
  "Middleware": {
    "RootRedirect": {
      "EnableRootRedirectMiddleware": false,
      "SwaggerRoutePrefix": "swagger"
    }
  },
  "MigrateDatabase": true,
  "MinimalApi": {
    "EnableMinimalApiEndpoints": true
  },
  "ModularMonolith": {
    "EnableModularMonolith": false,
    "JsonSettingsFileNameSearchPattern": "modules.*",
    "ModuleNaming": {
      "UseExplicitModuleFormat": false,
      "UseTruncatedModuleFormat": true,
      "UseModuleAttributes": true
    },
    "ModuleState": {
      "ConfigSettingKeyName": "Enabled"
    }
  },
  "Multitenancy": {
    "MultitenancyEnabled": false,
    "TenantIdRequired": false
  },
  "OpenTelemetry": {
    "EnableOpenTelemetry": false,
    "EnableTracing": true,
    "EnableMetrics": true,
    "EnableLogging": false // We use a Serilog sink for this.
  },
  "PasswordHasher": {
    "IterationCount": 600000
  },
  "PreProdEmailRecipient": "testing@melodicsoftware.com",
  "Quartz": {
    "EnableQuartz": false
  },
  "Redis": {
    "EnableRedis": false,
    "ConnectionStringName": "",
    "InstanceName": ""
  },
  "Routing": {
    "EnableRouting": true
  },
  "Security": {
    "DisableSecurity": false,
    "Authentication": {
      "EnableAuthentication": true,
      "ApiKeys": {
        "EnableApiKeys": false,
        "AuthenticationScheme": "ApiKey",
        "AuthenticationSchemeDisplayName": "API Key"
      },
      "Basic": {
        "EnableBasicAuthentication": false,
        "AuthenticationScheme": "Basic",
        "AuthenticationSchemeDisplayName": "Basic"
      },
      "Cookies": {
        // This is configured by IdentityServer and ASP.NET Identity.
        "EnableCookieAuthentication": false,
        "AuthenticationScheme": "Cookies"
      },
      "JwtBearerToken": {
        "EnableJwtBearerTokens": true,
        "AuthenticationScheme": "Bearer",
        "Audience": "identity-server",
        "NameClaimType": "name",
        "RoleClaimType": "role",
        "ValidTokenTypes": [
          "at+jwt"
        ],
        "ValidateAudience": false,
        "ValidAudiences": [ "identity-server" ],
        "RequireHttpsMetadata": false,
        "ForwardingCookieAuthenticationScheme": "Identity.Application"
      },
      "OAuth2Introspection": {
        "EnableOAuth2Introspection": true,
        "AuthenticationScheme": "Introspection",
        // When working with Duende Identity Server as the authority, these must match specific values.
        // https://docs.duendesoftware.com/identityserver/v7/fundamentals/resources/api_resources
        "ClientId": "idsrv", // API resource name.
        "NameClaimType": "name",
        "RoleClaimType": "role"
      },
      "OpenIdConnect": {
        "EnableOpenIdConnectAuthentication": false,
        "AuthenticationScheme": "OpenIdConnect",
        "DisplayName": "OpenIdConnect",
        "SignInScheme": "Cookies",
        "Authority": null,
        "ClientId": null,
        "ClientSecret": null,
        "ResponseType": "code",
        "Scopes": [
          "openid",
          "profile"
        ],
        "CallbackPath": "/signin-oidc",
        "SignedOutCallbackPath": null,
        "NameClaimType": "name",
        "RoleClaimType": "role"
      }
    },
    "Authorization": {
      "EnableAuthorization": true
    },
    "Https": {
      "UseHsts": true,
      "UseHttpsRedirection": true
    }
  },
  "SecurityHeaders": {
    "XContentTypeOptions": "nosniff",
    "XFrameOptions": "DENY",
    "ReferrerPolicy": "no-referrer",
    "ContentSecurityPolicy": {
      "DefaultSrc": "'self'",
      "ObjectSrc": "'none'",
      "FrameAncestors": "'none'",
      "BaseUri": "'self'",
      "FormAction": [
        "'self'",
        "https://accounts.google.com",
        "https://accounts.spotify.com",
        "https://authsignal.melodicsoftware.com",
        "https://authsignal-dev.melodicsoftware.com",
        "https://demo.duendesoftware.com",
        "https://login.microsoftonline.com",
        "https://mfa.authsignal.com"
      ],
      "MediaSrc": [
        "'self'"
      ],
      "ImgSrc": [
        "'self'",
        "data:"
      ],
      "ScriptSrc": [
        "'self'",
        "https://*.googleapis.com",
        "https://*.gstatic.com",
        "https://*.fontawesome.com",
        "https://code.jquery.com",
        "https://cdn.jsdelivr.net",
        "https://cdnjs.cloudflare.com",
        "'sha256-L8qt/b5QO7XjV7ytPI4GRfR2w4rsvBxM8PV94iZHAo8='",
        "https://unpkg.com"
      ],
      "StyleSrc": [
        "'self'",
        "https://*.googleapis.com",
        "https://*.gstatic.com",
        "https://*.fontawesome.com",
        "https://cdn.jsdelivr.net",
        "'sha256-0EZqoz+oBhx7gF4nvY2bSqoGyy4zLjNF+SDQXGp/ZrY='", // display:none;
        "'sha256-gQR7NBoVC1citN7HKb+aBjOCTe9r3CYypOhFZ5Y607c='", // For "_framework/aspnetcore-browser-refresh.js".
        "'sha256-aqNNdDLnnrDOnTNdkJpYlAxKVJtLt9CtFLklmInuUAE='", // For Microsoft's validation summary helper.
        "'unsafe-hashes'" // For Microsoft's validation summary helper.
      ],
      "FontSrc": [
        "'self'",
        "https://*.googleapis.com",
        "https://*.gstatic.com",
        "https://*.fontawesome.com"
      ],
      "ConnectSrc": [
        "'self'",
        "https://api.authsignal.com",
        "https://*.fontawesome.com",
        "http://localhost:*",
        "https://localhost:*",
        "ws://localhost:*"
      ],
      "UpgradeInsecureRequests": true
    }
  },
  "SeedData": true,
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Console",
      "Serilog.Sinks.File"
    ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Asp.Versioning": "Warning",
        "Duende": "Information",
        "Duende.IdentityServer": "Information",
        "Duende.IdentityServer.Startup": "Information",
        "Enterprise": "Information",
        "Enterprise.Applications.AspNetCore.Api.Swagger": "Information",
        "Enterprise.Applications.AspNetCore.Endpoints.Selection": "Warning",
        "Enterprise.Applications.AspNetCore.Observability.Diagnostics.MiddlewareAnalysis": "Warning",
        "IdentityServer": "Information",
        "Marvin.Cache.Headers": "Warning",
        "Marvin.Cache.Headers.HttpCacheHeadersMiddleware": "Warning",
        "Microsoft": "Information",
        "Microsoft.AspNetCore": "Warning",
        "Microsoft.AspNetCore.Authentication": "Information",
        "Microsoft.AspNetcore.HttpLogging": "Warning",
        "Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware": "Warning",
        "Microsoft.AspNetCore.Mvc.Infrastructure": "Warning",
        "Microsoft.AspNetCore.Mvc.Versioning": "Warning",
        "Microsoft.AspNetCore.Routing": "Warning",
        "Microsoft.EntityFrameworkCore.Database.Command": "Warning",
        "Microsoft.Extensions.Hosting": "Warning",
        "Microsoft.Hosting.Diagnostics": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "Serilog.AspNetCore.RequestLoggingMiddleware": "Information",
        "System": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "formatter": "Serilog.Formatting.Compact.RenderedCompactJsonFormatter, Serilog.Formatting.Compact",
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "/Logs/IdentityServer/log.txt",
          "rollingInterval": "Day",
          "fileSizeLimitBytes": 524288000, // 500 MB (The default is 1 GB).
          "rollOnFileSizeLimit": true,
          "retainedFileCountLimit": 5 // This should equate to 5 days unless the file size is exceeded. The default is 31.
        }
      }
    ]
  },
  "Serilog:ClearExistingProviders": true,
  "Shared": {
    "ApplicationName": "IdentityServer",
    "ApplicationDisplayName": "Duende Identity Server",
    "ApplicationDescription": "An instance of Duende Identity Server.",
    "OAuthAuthority": "https://localhost:5001"
  },
  "ShowErrors": false,
  "SignalR": {
    "SignalREnabled": true
  },
  "SupportEmailAddress": "support@melodicsoftware.com",
  "Swagger": {
    "EnableSwagger": true,
    "Security": {
      "OAuthAudience": "https://identity-server.melodicsoftware.com",
      "OAuthClientId": "idsrv.swagger",
      "OAuthScopes": {
        "openid": "OpenID information",
        "profile": "User profile information",
        "email": "User email address"
      },
      "EnableAuthorizationCodeFlow": true,
      "EnableImplicitFlow": false,
      "EnableClientCredentialsFlow": false,
      "EnablePasswordFlow": false,
      "UsePkce": true,
      // We have to do this because our authority is the same as our resource server. 
      "UseDiscoveryDocument": false
    }
  },
  "Versioning": {
    "EnableUrlVersioning": true,
    "EnableQueryStringVersioning": true,
    "EnableHeaderVersioning": true,
    "EnableMediaTypeVersioning": true
  },
  "WebApi": {
    "RoutePrefixSegment": "api"
  }
}